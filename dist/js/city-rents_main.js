let subhead=document.getElementsByClassName("chart-subhead"),headline=document.getElementById("chart-head");if(!headline)for(var i=0;i<subhead.length;i++)subhead[i].style.fontWeight="600";Highcharts.setOptions({lang:{thousandsSep:","}});let chartId=document.getElementById("chart-container");function drawHighcharts(){Highcharts.chart(chartId,{chart:{type:"scatter",styledMode:!0,spacingBottom:25,spacingRight:100,spacingLeft:0},title:{text:null},data:{googleSpreadsheetKey:"1emTlFRn0LG5YQWculO-zMoUUeVK5fCsCUBJzKaB_7o0",googleSpreadsheetWorksheet:2,seriesMapping:[{x:0,y:1,name:2,color:3}]},plotOptions:{series:{states:{hover:{enabled:!1}}}},legend:{enabled:!1},xAxis:{title:{text:"AVERAGE MONTHLY RENT"},labels:{useHTML:!0,style:{whiteSpace:"nowrap"},formatter:function(){return Highcharts.numberFormat(this.value,0,".",",")}},min:0,max:5e3,tickLength:0,tickPosition:"inside"},yAxis:{title:{text:"MEDIAN HOSUEHOLD INCOME FOR RENTERS"},labels:{useHTML:!0,overflow:"allow"},min:0,max:1e5},credits:{enabled:!1},tooltip:{shadow:!1,padding:10,formatter:function(){return point=this.point,html=point.name,html}},annotations:[{shapes:[{type:"path",points:[{x:0,y:0,xAxis:0,yAxis:0},{x:5e3,y:2e5,xAxis:0,yAxis:0}]}],labels:[{point:{x:5e3,y:58e3,yAxis:0,xAxis:0},text:"Manhattan, N.Y."},{point:{x:800,y:52e3,yAxis:0,xAxis:0},text:"Virginia Beach, Va."},{point:{x:4e3,y:92e3,yAxis:0,xAxis:0},text:"San Francisco"},{point:{x:4e3,y:38e3,yAxis:0,xAxis:0},text:"Boston"}]}],responsive:{rules:[{condition:{maxWidth:500},chartOptions:{chart:{spacingRight:10},legend:{align:"left",x:-18},xAxis:{max:6e3}}}]}})}setTimeout(function(){if(""===chartId.innerHTML){let t=document.getElementsByClassName("chart-area");for(var e=0;e<t.length;e++)t[e].style.display="none";document.getElementById("chart-fallback").innerHTML+='<img src="https://fm-static.cnbc.com/awsmedia/chart/2019/10/08/chart-error_wide.1570569331252.png" style="width: 100%;max-width:660px">'}},500),"complete"===document.readyState||"interactive"===document.readyState?drawHighcharts():document.addEventListener("DOMContentLoaded",drawHighcharts);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
