let subhead=document.getElementsByClassName("chart-subhead"),headline=document.getElementById("chart-head");if(!headline)for(var i=0;i<subhead.length;i++)subhead[i].style.fontWeight="600";Highcharts.setOptions({lang:{thousandsSep:",",numericSymbols:[null,"M","G","T","P","E"]}});let chartId=document.getElementById("chart-container");function drawHighcharts(){Highcharts.chart(chartId,{chart:{type:"scatter",styledMode:!0,spacingBottom:25,spacingRight:100},title:{text:null},data:{googleSpreadsheetKey:"1emTlFRn0LG5YQWculO-zMoUUeVK5fCsCUBJzKaB_7o0",googleSpreadsheetWorksheet:2,seriesMapping:[{x:0,y:1,name:2,color:3}]},plotOptions:{series:{groupPadding:.1}},legend:{align:"right",symbolRadius:0,verticalAlign:"top",x:10,itemMarginTop:-10},xAxis:{labels:{useHTML:!0,style:{whiteSpace:"nowrap"},formatter:function(){return Highcharts.numberFormat(this.value,0,".",",")}},min:0,tickLength:5},yAxis:{title:!1,labels:{useHTML:!0,overflow:"allow"},min:0,max:1e5},credits:{enabled:!1},tooltip:{shadow:!1,padding:10,formatter:function(){return point=this.point,html=point.name,html}},annotations:[{shapes:[{type:"path",points:[{x:0,y:0,xAxis:0,yAxis:0},{x:5e3,y:2e5,xAxis:0,yAxis:0}]}]}],responsive:{rules:[{condition:{maxWidth:500},chartOptions:{chart:{spacingRight:10},legend:{align:"left",x:-18},tooltip:{enabled:!1}}}]}})}setTimeout(function(){if(""===chartId.innerHTML){let e=document.getElementsByClassName("chart-area");for(var t=0;t<e.length;t++)e[t].style.display="none";document.getElementById("chart-fallback").innerHTML+='<img src="https://fm-static.cnbc.com/awsmedia/chart/2019/10/08/chart-error_wide.1570569331252.png" style="width: 100%;max-width:660px">'}},500),"complete"===document.readyState||"interactive"===document.readyState?drawHighcharts():document.addEventListener("DOMContentLoaded",drawHighcharts);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
